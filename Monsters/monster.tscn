[gd_scene load_steps=34 format=4 uid="uid://bv0xxgt1n284d"]

[ext_resource type="Script" path="res://Monsters/Monster.cs" id="1_g3eh5"]
[ext_resource type="PackedScene" uid="uid://bet4sr6qiuddb" path="res://Monsters/grizzler.tscn" id="2_71hpp"]
[ext_resource type="Script" path="res://Monsters/MSM/MSM.cs" id="3_cgum4"]
[ext_resource type="Script" path="res://Monsters/MSM/IdleState.cs" id="4_tuk86"]
[ext_resource type="Script" path="res://BaseComponents/HealthComponent.cs" id="5_4d0qn"]
[ext_resource type="Script" path="res://Monsters/MSM/WalkState.cs" id="5_gtr0n"]
[ext_resource type="Script" path="res://Monsters/MSM/JumpState.cs" id="6_oa6mx"]
[ext_resource type="Script" path="res://JmoAI/Blackboard/Blackboard.cs" id="6_qo7pu"]
[ext_resource type="Script" path="res://Monsters/MSM/FallState.cs" id="7_20fcs"]
[ext_resource type="Script" path="res://Monsters/MSM/AnimState.cs" id="7_l3e5k"]
[ext_resource type="Script" path="res://Monsters/MSM/ClimbState.cs" id="8_21b5u"]
[ext_resource type="Script" path="res://Monsters/MSM/ClimbIdleState.cs" id="9_8dtxg"]
[ext_resource type="Script" path="res://Monsters/MSM/DesendState.cs" id="9_buopr"]
[ext_resource type="Script" path="res://Monsters/MSM/ClimbInitBTState.cs" id="9_pp2xl"]
[ext_resource type="Script" path="res://JmoAI/BT/BehaviorTree.cs" id="10_reqaw"]
[ext_resource type="Script" path="res://JmoAI/BT/Composites/Sequence.cs" id="11_10583"]
[ext_resource type="Script" path="res://Monsters/MSM/AttackState.cs" id="11_eaoea"]
[ext_resource type="Script" path="res://Monsters/MSM/ClimbSkid.cs" id="12_40m3w"]
[ext_resource type="PackedScene" uid="uid://ckjqfkhvrt3vr" path="res://Monsters/MonsterAttacks/grizzle_2_gna.tscn" id="12_s8ya2"]
[ext_resource type="Script" path="res://JmoAI/BT/Actions/PlayAnim.cs" id="13_106si"]
[ext_resource type="Script" path="res://BaseComponents/HitboxComponent3D.cs" id="14_kkv0a"]
[ext_resource type="Script" path="res://BaseComponents/HurtboxComponent3D.cs" id="15_hjofb"]
[ext_resource type="Script" path="res://Monsters/MSM/WallAttackState.cs" id="19_118ri"]

[sub_resource type="PortableCompressedTexture2D" id="PortableCompressedTexture2D_fmqjk"]
_data = PackedByteArray("")
size_override = Vector2(1952, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_evvsn"]
resource_local_to_scene = true
atlas = SubResource("PortableCompressedTexture2D_fmqjk")
region = Rect2(768, 64, 32, 32)

[sub_resource type="Animation" id="Animation_uvjyr"]
resource_name = "punch1"

[sub_resource type="Animation" id="Animation_b2uam"]
resource_name = "punch2"

[sub_resource type="Animation" id="Animation_ayl6s"]
resource_name = "wallKick"

[sub_resource type="Animation" id="Animation_ranyj"]
resource_name = "wallPunch"

[sub_resource type="AnimationLibrary" id="AnimationLibrary_j6d7f"]
_data = {
"punch1": SubResource("Animation_uvjyr"),
"punch2": SubResource("Animation_b2uam"),
"wallKick": SubResource("Animation_ayl6s"),
"wallPunch": SubResource("Animation_ranyj")
}

[sub_resource type="BoxShape3D" id="BoxShape3D_ucf13"]
size = Vector3(1, 1.5, 1)

[sub_resource type="SphereShape3D" id="SphereShape3D_gfrke"]
radius = 1.0

[sub_resource type="SphereShape3D" id="SphereShape3D_x1l46"]

[node name="monster" type="CharacterBody3D"]
collision_mask = 3
script = ExtResource("1_g3eh5")

[node name="grizzle" parent="." instance=ExtResource("2_71hpp")]
texture = SubResource("AtlasTexture_evvsn")

[node name="AttackAnim" type="AnimationPlayer" parent="."]
root_node = NodePath("../grizzle")
libraries = {
"": SubResource("AnimationLibrary_j6d7f")
}

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("BoxShape3D_ucf13")

[node name="StateMachine" type="Node" parent="." node_paths=PackedStringArray("AttackState", "WallAttackState", "InitialSubState")]
script = ExtResource("3_cgum4")
AttackState = NodePath("Attack")
WallAttackState = NodePath("WallAttack")
InitialSubState = NodePath("Idle")

[node name="Idle" type="Node" parent="StateMachine" node_paths=PackedStringArray("_walkState", "_jumpState", "_attackState", "_fallState")]
script = ExtResource("4_tuk86")
AnimName = "idle"
_walkState = NodePath("../Walk")
_jumpState = NodePath("../Jump")
_attackState = NodePath("../Attack")
_fallState = NodePath("../Fall")
SelfInteruptible = 0

[node name="Walk" type="Node" parent="StateMachine" node_paths=PackedStringArray("_idleState", "_jumpState", "_fallState")]
script = ExtResource("5_gtr0n")
AnimName = "walk"
_idleState = NodePath("../Idle")
_jumpState = NodePath("../Jump")
_fallState = NodePath("../Fall")
SelfInteruptible = 0

[node name="Jump" type="Node" parent="StateMachine" node_paths=PackedStringArray("_jumpFallState", "_landFloorState", "_landWallState")]
script = ExtResource("6_oa6mx")
AnimName = "jump"
_jumpFallState = NodePath("../Fall")
_landFloorState = NodePath("../LandFloor")
_landWallState = NodePath("../ClimbInit")
SelfInteruptible = 0

[node name="Fall" type="Node" parent="StateMachine" node_paths=PackedStringArray("_landFloorState", "_landWallState", "_landFallState")]
script = ExtResource("7_20fcs")
_landFloorState = NodePath("../LandFloor")
_landWallState = NodePath("../ClimbInit")
_landFallState = NodePath("../LandFall")
SelfInteruptible = 0

[node name="LandFloor" type="Node" parent="StateMachine" node_paths=PackedStringArray("AnimTransitionState")]
script = ExtResource("7_l3e5k")
AnimName = "land"
AnimTransitionState = NodePath("../Idle")
SelfInteruptible = 1

[node name="LandFall" type="Node" parent="StateMachine" node_paths=PackedStringArray("AnimTransitionState")]
script = ExtResource("7_l3e5k")
AnimName = "land2"
AnimTransitionState = NodePath("../Idle")
SelfInteruptible = 1

[node name="ClimbInit" type="Node" parent="StateMachine" node_paths=PackedStringArray("OnTreeSuccessState")]
script = ExtResource("9_pp2xl")
OnTreeSuccessState = NodePath("../ClimbIdle")

[node name="BehaviorTree" type="Node" parent="StateMachine/ClimbInit"]
script = ExtResource("10_reqaw")

[node name="Sequence" type="Node" parent="StateMachine/ClimbInit/BehaviorTree"]
script = ExtResource("11_10583")

[node name="ClimbInitSkid" type="Node" parent="StateMachine/ClimbInit/BehaviorTree/Sequence"]
script = ExtResource("12_40m3w")
_skidAnimName = "desend"
SelfInteruptible = 1

[node name="ClimbLatchOn" type="Node" parent="StateMachine/ClimbInit/BehaviorTree/Sequence"]
script = ExtResource("13_106si")
AnimName = "lift"
SelfInteruptible = 1

[node name="ClimbIdle" type="Node" parent="StateMachine" node_paths=PackedStringArray("_climbState", "_descendState", "_jumpState")]
script = ExtResource("9_8dtxg")
_animName = "wallIdle"
_climbState = NodePath("../Climbing")
_descendState = NodePath("../Desending")
_jumpState = NodePath("../Jump")
SelfInteruptible = 0

[node name="Climbing" type="Node" parent="StateMachine" node_paths=PackedStringArray("_climbIdleState", "_landState", "_descendState", "_jumpState")]
script = ExtResource("8_21b5u")
_climbIdleState = NodePath("../ClimbIdle")
_landState = NodePath("../LandFloor")
_descendState = NodePath("../Desending")
_jumpState = NodePath("../Jump")
AnimName = "climb"
SelfInteruptible = 0

[node name="Desending" type="Node" parent="StateMachine" node_paths=PackedStringArray("_climbIdleState", "_landState", "_climbState", "_jumpState")]
script = ExtResource("9_buopr")
_climbIdleState = NodePath("../ClimbIdle")
_landState = NodePath("../LandFloor")
_climbState = NodePath("../Climbing")
_jumpState = NodePath("../Jump")
AnimName = "desend"
SelfInteruptible = 0

[node name="Attack" type="Node" parent="StateMachine" node_paths=PackedStringArray("PostAttackState", "OnTreeSuccessState", "OnTreeFailureState")]
script = ExtResource("11_eaoea")
PostAttackState = NodePath("../Idle")
OnTreeSuccessState = NodePath(".")
OnTreeFailureState = NodePath("../Idle")

[node name="BehaviorTree" parent="StateMachine/Attack" instance=ExtResource("12_s8ya2")]

[node name="WallAttack" type="Node" parent="StateMachine" node_paths=PackedStringArray("_onClimbableEjectState", "PostAttackState", "OnTreeSuccessState", "OnTreeFailureState")]
script = ExtResource("19_118ri")
_onClimbableEjectState = NodePath("../Jump")
PostAttackState = NodePath("../ClimbIdle")
OnTreeSuccessState = NodePath(".")
OnTreeFailureState = NodePath("../ClimbIdle")

[node name="BehaviorTree" parent="StateMachine/WallAttack" instance=ExtResource("12_s8ya2")]

[node name="HealthComponent" type="Node2D" parent="."]
script = ExtResource("5_4d0qn")

[node name="HitboxComponent" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.03584, 0)
monitoring = false
monitorable = false
script = ExtResource("14_kkv0a")

[node name="CollisionShape3D" type="CollisionShape3D" parent="HitboxComponent"]
shape = SubResource("SphereShape3D_gfrke")

[node name="HurtboxComponent" type="Area3D" parent="." node_paths=PackedStringArray("HealthComponent")]
monitoring = false
monitorable = false
script = ExtResource("15_hjofb")
HealthComponent = NodePath("../HealthComponent")

[node name="CollisionShape3D" type="CollisionShape3D" parent="HurtboxComponent"]
shape = SubResource("SphereShape3D_x1l46")

[node name="Blackboard" type="Node" parent="."]
script = ExtResource("6_qo7pu")
